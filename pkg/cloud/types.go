// Code generated by tutone: DO NOT EDIT
package cloud

// Actor - The `Actor` object contains fields that are scoped to the API user's access level.
type Actor struct {
	// The `cloud` field provides access to cloud integrations configuration data scoped to the Actor.
	Cloud CloudActorFields `json:"cloud"`
}

// CloudAPIgatewayIntegration - API Gateway Integration
type CloudAPIgatewayIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify each name or prefix for the Stages that you want to monitor. Filter values are case-sensitive.
	StagePrefixes []string `json:"stagePrefixes"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAPIgatewayIntegration) ImplementsCloudIntegration() {}

// CloudActorFields -
type CloudActorFields struct {
	// Get all linked cloud provider accounts scoped to the Actor.
	LinkedAccounts []CloudLinkedAccount `json:"linkedAccounts"`
}

// CloudAlbIntegration - ELB Integration
type CloudAlbIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.
	LoadBalancerPrefixes []string `json:"loadBalancerPrefixes"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAlbIntegration) ImplementsCloudIntegration() {}

// CloudAutoscalingIntegration - AutoScaling Integration
type CloudAutoscalingIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAutoscalingIntegration) ImplementsCloudIntegration() {}

// CloudAwsAppsyncIntegration - AppSync Integration
type CloudAwsAppsyncIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsAppsyncIntegration) ImplementsCloudIntegration() {}

// CloudAwsAthenaIntegration - Athena Integration
type CloudAwsAthenaIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsAthenaIntegration) ImplementsCloudIntegration() {}

// CloudAwsDirectconnectIntegration - Direct Connect Integration
type CloudAwsDirectconnectIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsDirectconnectIntegration) ImplementsCloudIntegration() {}

// CloudAwsDocdbIntegration - DocumentDB Integration
type CloudAwsDocdbIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsDocdbIntegration) ImplementsCloudIntegration() {}

// CloudAwsGlueIntegration - Glue Integration
type CloudAwsGlueIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsGlueIntegration) ImplementsCloudIntegration() {}

// CloudAwsGovCloudProvider - The Amazon Web Services cloud provider (GovCloud)
type CloudAwsGovCloudProvider struct {
	// The AWS Account ID
	AwsAccountId string `json:"awsAccountId"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud provider identifier in NewRelic.
	ID int `json:"id"`
	// The cloud provider icon name.
	Icon string `json:"icon"`
	// The cloud provider name.
	Name string `json:"name"`
	// Get details of one cloud provider service.
	Service CloudService `json:"service"`
	// Get details of all the cloud provider services available for integration.
	Services []CloudService `json:"services"`
	// The cloud provider short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsGovCloudProvider) ImplementsCloudProvider() {}

// CloudAwsMqIntegration - MQ Integration
type CloudAwsMqIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsMqIntegration) ImplementsCloudIntegration() {}

// CloudAwsMskIntegration - Managed Kafka Integration
type CloudAwsMskIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsMskIntegration) ImplementsCloudIntegration() {}

// CloudAwsProvider - The Amazon Web Services cloud provider
type CloudAwsProvider struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud provider identifier in NewRelic.
	ID int `json:"id"`
	// The cloud provider icon name.
	Icon string `json:"icon"`
	// The cloud provider name.
	Name string `json:"name"`
	// The New Relic AWS Account ID that will use the Role.
	RoleAccountId string `json:"roleAccountId"`
	// The external ID required to assume the Role by the New Relic Account.
	RoleExternalId string `json:"roleExternalId"`
	// Get details of one cloud provider service.
	Service CloudService `json:"service"`
	// Get details of all the cloud provider services available for integration.
	Services []CloudService `json:"services"`
	// The cloud provider short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsProvider) ImplementsCloudProvider() {}

// CloudAwsQldbIntegration - QLDB Integration
type CloudAwsQldbIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsQldbIntegration) ImplementsCloudIntegration() {}

// CloudAwsStatesIntegration - Step Functions Integration
type CloudAwsStatesIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsStatesIntegration) ImplementsCloudIntegration() {}

// CloudAwsWafIntegration - WAF Integration
type CloudAwsWafIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAwsWafIntegration) ImplementsCloudIntegration() {}

// CloudAzureAPImanagementIntegration - Api Management Integration
type CloudAzureAPImanagementIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureAPImanagementIntegration) ImplementsCloudIntegration() {}

// CloudAzureAppserviceIntegration - App Service Integration
type CloudAzureAppserviceIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureAppserviceIntegration) ImplementsCloudIntegration() {}

// CloudAzureCosmosdbIntegration - Cosmos DB Integration
type CloudAzureCosmosdbIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureCosmosdbIntegration) ImplementsCloudIntegration() {}

// CloudAzureCostmanagementIntegration - Cost Management Integration
type CloudAzureCostmanagementIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify if additional cost data per tag should be collected. This field is case sensitive.
	TagKeys []string `json:"tagKeys"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureCostmanagementIntegration) ImplementsCloudIntegration() {}

// CloudAzureFunctionsIntegration - Functions Integration
type CloudAzureFunctionsIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureFunctionsIntegration) ImplementsCloudIntegration() {}

// CloudAzureLoadbalancerIntegration - Load Balancer Integration
type CloudAzureLoadbalancerIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureLoadbalancerIntegration) ImplementsCloudIntegration() {}

// CloudAzureMariadbIntegration - Database for MariaDB Integration
type CloudAzureMariadbIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureMariadbIntegration) ImplementsCloudIntegration() {}

// CloudAzureMysqlIntegration - Database for MySQL Integration
type CloudAzureMysqlIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureMysqlIntegration) ImplementsCloudIntegration() {}

// CloudAzurePostgresqlIntegration - Database for PostgreSQL Integration
type CloudAzurePostgresqlIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzurePostgresqlIntegration) ImplementsCloudIntegration() {}

// CloudAzureRediscacheIntegration - Redis Cache Integration
type CloudAzureRediscacheIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureRediscacheIntegration) ImplementsCloudIntegration() {}

// CloudAzureServicebusIntegration - Service Bus Integration
type CloudAzureServicebusIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureServicebusIntegration) ImplementsCloudIntegration() {}

// CloudAzureSqlIntegration - SQL Database Integration
type CloudAzureSqlIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureSqlIntegration) ImplementsCloudIntegration() {}

// CloudAzureSqlmanagedIntegration - SQL Managed Instances Integration
type CloudAzureSqlmanagedIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureSqlmanagedIntegration) ImplementsCloudIntegration() {}

// CloudAzureStorageIntegration - Storage Integration
type CloudAzureStorageIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureStorageIntegration) ImplementsCloudIntegration() {}

// CloudAzureVirtualmachineIntegration - Virtual machine scale sets Integration
type CloudAzureVirtualmachineIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureVirtualmachineIntegration) ImplementsCloudIntegration() {}

// CloudAzureVirtualnetworksIntegration - Virtual Network Integration
type CloudAzureVirtualnetworksIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureVirtualnetworksIntegration) ImplementsCloudIntegration() {}

// CloudAzureVmsIntegration - Virtual Machines Integration
type CloudAzureVmsIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.
	ResourceGroups []string `json:"resourceGroups"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudAzureVmsIntegration) ImplementsCloudIntegration() {}

// CloudBaseIntegration - Base Integration Object
type CloudBaseIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudBaseIntegration) ImplementsCloudIntegration() {}

// CloudBaseProvider - Base Provider Object
type CloudBaseProvider struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud provider identifier in NewRelic.
	ID int `json:"id"`
	// The cloud provider icon name.
	Icon string `json:"icon"`
	// The cloud provider name.
	Name string `json:"name"`
	// Get details of one cloud provider service.
	Service CloudService `json:"service"`
	// Get details of all the cloud provider services available for integration.
	Services []CloudService `json:"services"`
	// The cloud provider short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudBaseProvider) ImplementsCloudProvider() {}

// CloudBillingIntegration - Billing Integration
type CloudBillingIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudBillingIntegration) ImplementsCloudIntegration() {}

// CloudCloudfrontIntegration - CloudFront Integration
type CloudCloudfrontIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if Lambdas@Edge should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchLambdasAtEdge bool `json:"fetchLambdasAtEdge"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudCloudfrontIntegration) ImplementsCloudIntegration() {}

// CloudCloudtrailIntegration - CloudTrail Integration
type CloudCloudtrailIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudCloudtrailIntegration) ImplementsCloudIntegration() {}

// CloudDynamodbIntegration - DynamoDB Integration
type CloudDynamodbIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudDynamodbIntegration) ImplementsCloudIntegration() {}

// CloudEbsIntegration - EBS Integration
type CloudEbsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudEbsIntegration) ImplementsCloudIntegration() {}

// CloudEc2Integration - EC2 Integration
type CloudEc2Integration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if IP addresses of ec2 instance should be collected
	FetchIpAddresses bool `json:"fetchIpAddresses"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudEc2Integration) ImplementsCloudIntegration() {}

// CloudEcsIntegration - ECS Integration
type CloudEcsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudEcsIntegration) ImplementsCloudIntegration() {}

// CloudEfsIntegration - EFS Integration
type CloudEfsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudEfsIntegration) ImplementsCloudIntegration() {}

// CloudElasticacheIntegration - ElastiCache Integration
type CloudElasticacheIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudElasticacheIntegration) ImplementsCloudIntegration() {}

// CloudElasticbeanstalkIntegration - Elastic Beanstalk Integration
type CloudElasticbeanstalkIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudElasticbeanstalkIntegration) ImplementsCloudIntegration() {}

// CloudElasticsearchIntegration - Elasticsearch Service Integration
type CloudElasticsearchIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if metrics should be collected for nodes. Turning it on will increase the number of API calls made to CloudWatch.
	FetchNodes bool `json:"fetchNodes"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudElasticsearchIntegration) ImplementsCloudIntegration() {}

// CloudElbIntegration - ELB (Classic) Integration
type CloudElbIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudElbIntegration) ImplementsCloudIntegration() {}

// CloudEmrIntegration - EMR Integration
type CloudEmrIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudEmrIntegration) ImplementsCloudIntegration() {}

// CloudGcpAppengineIntegration - App Engine Integration
type CloudGcpAppengineIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpAppengineIntegration) ImplementsCloudIntegration() {}

// CloudGcpBigqueryIntegration - BigQuery Integration
type CloudGcpBigqueryIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpBigqueryIntegration) ImplementsCloudIntegration() {}

// CloudGcpFunctionsIntegration - Cloud Functions Integration
type CloudGcpFunctionsIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpFunctionsIntegration) ImplementsCloudIntegration() {}

// CloudGcpKubernetesIntegration - Kubernetes Engine Integration
type CloudGcpKubernetesIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpKubernetesIntegration) ImplementsCloudIntegration() {}

// CloudGcpLoadbalancingIntegration - Cloud Load Balancing Integration
type CloudGcpLoadbalancingIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpLoadbalancingIntegration) ImplementsCloudIntegration() {}

// CloudGcpProvider - The Google Cloud Platform cloud provider
type CloudGcpProvider struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud provider identifier in NewRelic.
	ID int `json:"id"`
	// The cloud provider icon name.
	Icon string `json:"icon"`
	// The cloud provider name.
	Name string `json:"name"`
	// Get details of one cloud provider service.
	Service CloudService `json:"service"`
	// The service account identifier used to link the GCP project to NewRelic.
	ServiceAccountId string `json:"serviceAccountId"`
	// Get details of all the cloud provider services available for integration.
	Services []CloudService `json:"services"`
	// The cloud provider short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpProvider) ImplementsCloudProvider() {}

// CloudGcpPubsubIntegration - Cloud Pub/Sub Integration
type CloudGcpPubsubIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpPubsubIntegration) ImplementsCloudIntegration() {}

// CloudGcpSpannerIntegration - Cloud Spanner Integration
type CloudGcpSpannerIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpSpannerIntegration) ImplementsCloudIntegration() {}

// CloudGcpSqlIntegration - Cloud SQL Integration
type CloudGcpSqlIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpSqlIntegration) ImplementsCloudIntegration() {}

// CloudGcpStorageIntegration - Cloud Storage Integration
type CloudGcpStorageIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpStorageIntegration) ImplementsCloudIntegration() {}

// CloudGcpVmsIntegration - Compute Engine Integration
type CloudGcpVmsIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudGcpVmsIntegration) ImplementsCloudIntegration() {}

// CloudHealthIntegration - Health Integration
type CloudHealthIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudHealthIntegration) ImplementsCloudIntegration() {}

// CloudIamIntegration - IAM Integration
type CloudIamIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudIamIntegration) ImplementsCloudIntegration() {}

// CloudIntegration - The configuration of a cloud service integration for a linked account.
type CloudIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudIntegration) ImplementsCloudIntegration() {}

// CloudIotIntegration - IoT Integration
type CloudIotIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudIotIntegration) ImplementsCloudIntegration() {}

// CloudKinesisFirehoseIntegration - Kinesis Firehose Integration
type CloudKinesisFirehoseIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudKinesisFirehoseIntegration) ImplementsCloudIntegration() {}

// CloudKinesisIntegration - Kinesis Streams Integration
type CloudKinesisIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if Shards should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchShards bool `json:"fetchShards"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudKinesisIntegration) ImplementsCloudIntegration() {}

// CloudLambdaIntegration - Lambda Integration
type CloudLambdaIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudLambdaIntegration) ImplementsCloudIntegration() {}

// CloudLinkedAccount - A cloud account linked to a NewRelic account.
type CloudLinkedAccount struct {
	// The credential. This is a Role ARN for AWS, an application ID for Azure and a service account ID or user account email for GCP.
	AuthLabel string `json:"authLabel"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Indicates whether the account disabled.
	Disabled bool `json:"disabled"`
	// The cloud account identifier. This is the Account ID in AWS, the Subscription ID in Azure and the Project ID in GCP.
	ExternalId string `json:"externalId"`
	// The linked account identifier in NewRelic.
	ID int `json:"id"`
	// Get details of one cloud service integration.
	Integration CloudIntegrationInterface `json:"integration"`
	// Get details of all cloud service integrations.
	Integrations []CloudIntegrationInterface `json:"integrations"`
	// The linked account name in NewRelic.
	Name string `json:"name"`
	// The New Relic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud provider.
	Provider CloudProviderInterface `json:"provider"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

// CloudProvider - A cloud services provider.
type CloudProvider struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud provider identifier in NewRelic.
	ID int `json:"id"`
	// The cloud provider icon name.
	Icon string `json:"icon"`
	// The cloud provider name.
	Name string `json:"name"`
	// Get details of one cloud provider service.
	Service CloudService `json:"service"`
	// Get details of all the cloud provider services available for integration.
	Services []CloudService `json:"services"`
	// The cloud provider short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudProvider) ImplementsCloudProvider() {}

// CloudRdsIntegration - RDS Integration
type CloudRdsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudRdsIntegration) ImplementsCloudIntegration() {}

// CloudRedshiftIntegration - Redshift Integration
type CloudRedshiftIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudRedshiftIntegration) ImplementsCloudIntegration() {}

// CloudRoute53Integration - Route 53 Integration
type CloudRoute53Integration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudRoute53Integration) ImplementsCloudIntegration() {}

// CloudS3Integration - S3 Integration
type CloudS3Integration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudS3Integration) ImplementsCloudIntegration() {}

// CloudService - A Cloud Provider service available for monitoring.
type CloudService struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service identifier in NewRelic.
	ID int `json:"id"`
	// The cloud service icon name.
	Icon string `json:"icon"`
	// Shows if the cloud service is enabled for integrating.
	IsEnabled bool `json:"isEnabled"`
	// The cloud service name.
	Name string `json:"name"`
	// The cloud provider.
	Provider CloudProviderInterface `json:"provider"`
	// The cloud service unique short name.
	Slug string `json:"slug"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

// CloudSesIntegration - SES Integration
type CloudSesIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudSesIntegration) ImplementsCloudIntegration() {}

// CloudSnsIntegration - SNS Integration
type CloudSnsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudSnsIntegration) ImplementsCloudIntegration() {}

// CloudSqsIntegration - SQS Integration
type CloudSqsIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchExtendedInventory bool `json:"fetchExtendedInventory"`
	// Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchTags bool `json:"fetchTags"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.
	QueuePrefixes []string `json:"queuePrefixes"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudSqsIntegration) ImplementsCloudIntegration() {}

// CloudTrustedadvisorIntegration - Trusted Advisor Integration
type CloudTrustedadvisorIntegration struct {
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudTrustedadvisorIntegration) ImplementsCloudIntegration() {}

// CloudVpcIntegration - VPC Integration
type CloudVpcIntegration struct {
	// Specify each AWS region that includes the resources that you want to monitor.
	AwsRegions []string `json:"awsRegions"`
	// The object creation date, in epoch (Unix) time
	CreatedAt EpochSeconds `json:"createdAt"`
	// Specify if NAT gateway should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchNatGateway bool `json:"fetchNatGateway"`
	// Specify if VPN should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
	FetchVpn bool `json:"fetchVpn"`
	// The cloud service integration identifier.
	ID int `json:"id"`
	// [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval
	InventoryPollingInterval int `json:"inventoryPollingInterval"`
	// The parent linked account identifier.
	LinkedAccount CloudLinkedAccount `json:"linkedAccount"`
	// The data polling interval in seconds.
	MetricsPollingInterval int `json:"metricsPollingInterval"`
	// The cloud service integration name.
	Name string `json:"name"`
	// The parent NewRelic account identifier.
	NrAccountId int `json:"nrAccountId"`
	// The cloud service used in the integration.
	Service CloudService `json:"service"`
	// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagKey string `json:"tagKey"`
	// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
	TagValue string `json:"tagValue"`
	// The object last update date, in epoch (Unix) time
	UpdatedAt EpochSeconds `json:"updatedAt"`
}

func (x *CloudVpcIntegration) ImplementsCloudIntegration() {}

type linkedAccountsResponse struct {
	Actor Actor `json:"actor"`
}

// EpochSeconds - The `EpochSeconds` scalar represents the number of seconds since the Unix epoch
type EpochSeconds string

// CloudIntegration - The configuration of a cloud service integration for a linked account.
type CloudIntegrationInterface interface {
	ImplementsCloudIntegration()
}

// CloudProvider - A cloud services provider.
type CloudProviderInterface interface {
	ImplementsCloudProvider()
}
