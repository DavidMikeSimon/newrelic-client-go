// Code generated by tutone: DO NOT EDIT
package edge

// EdgeCreateTraceObserverResponseErrorType - Known error codes and messages for `CreateTraceObserverResponseError`.
type EdgeCreateTraceObserverResponseErrorType string

var EdgeCreateTraceObserverResponseErrorTypeTypes = struct {
	// A trace observer already exists for this account family and provider region.
	ALREADY_EXISTS EdgeCreateTraceObserverResponseErrorType
	// Trace observers aren’t available in provider region.
	NO_AVAILABILITY_IN_REGION EdgeCreateTraceObserverResponseErrorType
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER EdgeCreateTraceObserverResponseErrorType
	// We couldn’t process this request.
	UNEXPECTED_ERROR EdgeCreateTraceObserverResponseErrorType
}{
	// A trace observer already exists for this account family and provider region.
	ALREADY_EXISTS: "ALREADY_EXISTS",
	// Trace observers aren’t available in provider region.
	NO_AVAILABILITY_IN_REGION: "NO_AVAILABILITY_IN_REGION",
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER: "UNAUTHORIZED_USER",
	// We couldn’t process this request.
	UNEXPECTED_ERROR: "UNEXPECTED_ERROR",
}

// EdgeDeleteTraceObserverResponseErrorType - Known error codes and messages for `DeleteTraceObserverResponseError`.
type EdgeDeleteTraceObserverResponseErrorType string

var EdgeDeleteTraceObserverResponseErrorTypeTypes = struct {
	// The trace observer has already been deleted.
	ALREADY_DELETED EdgeDeleteTraceObserverResponseErrorType
	// No trace observer was found with the id given.
	NOT_FOUND EdgeDeleteTraceObserverResponseErrorType
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER EdgeDeleteTraceObserverResponseErrorType
	// We couldn’t process this request.
	UNEXPECTED_ERROR EdgeDeleteTraceObserverResponseErrorType
}{
	// The trace observer has already been deleted.
	ALREADY_DELETED: "ALREADY_DELETED",
	// No trace observer was found with the id given.
	NOT_FOUND: "NOT_FOUND",
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER: "UNAUTHORIZED_USER",
	// We couldn’t process this request.
	UNEXPECTED_ERROR: "UNEXPECTED_ERROR",
}

// EdgeEndpointStatus - Status of the endpoint.
type EdgeEndpointStatus string

var EdgeEndpointStatusTypes = struct {
	// The endpoint has been created and is available for use.
	CREATED EdgeEndpointStatus
	// The endpoint has been deleted and is no longer available for use.
	DELETED EdgeEndpointStatus
}{
	// The endpoint has been created and is available for use.
	CREATED: "CREATED",
	// The endpoint has been deleted and is no longer available for use.
	DELETED: "DELETED",
}

// EdgeEndpointType - Type of connection established with the trace observer. Currently, only `PUBLIC` is supported.
type EdgeEndpointType string

var EdgeEndpointTypeTypes = struct {
	// PUBLIC: the endpoint is reachable on the internet.
	PUBLIC EdgeEndpointType
}{
	// PUBLIC: the endpoint is reachable on the internet.
	PUBLIC: "PUBLIC",
}

// EdgeProviderRegion - Provider and region where the trace observer is located. Currently, only AWS regions are supported.
type EdgeProviderRegion string

var EdgeProviderRegionTypes = struct {
	// Provider: `AWS`, Region: `us-east-1`
	AWS_US_EAST_1 EdgeProviderRegion
	// Provider: `AWS`, Region: `us-east-2`
	AWS_US_EAST_2 EdgeProviderRegion
}{
	// Provider: `AWS`, Region: `us-east-1`
	AWS_US_EAST_1: "AWS_US_EAST_1",
	// Provider: `AWS`, Region: `us-east-2`
	AWS_US_EAST_2: "AWS_US_EAST_2",
}

// EdgeTraceObserverResponseErrorType - Known error codes and messages for `TraceObserverResponseError`.
type EdgeTraceObserverResponseErrorType string

var EdgeTraceObserverResponseErrorTypeTypes = struct {
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER EdgeTraceObserverResponseErrorType
	// We couldn’t process this request.
	UNEXPECTED_ERROR EdgeTraceObserverResponseErrorType
}{
	// You don’t have permission to make this trace observer call.
	UNAUTHORIZED_USER: "UNAUTHORIZED_USER",
	// We couldn’t process this request.
	UNEXPECTED_ERROR: "UNEXPECTED_ERROR",
}

// EdgeTraceObserverStatus - Status of the trace observer.
type EdgeTraceObserverStatus string

var EdgeTraceObserverStatusTypes = struct {
	// The trace observer has been created and is available for use.
	CREATED EdgeTraceObserverStatus
	// The trace observer has been deleted and is no longer available for use.
	DELETED EdgeTraceObserverStatus
}{
	// The trace observer has been created and is available for use.
	CREATED: "CREATED",
	// The trace observer has been deleted and is no longer available for use.
	DELETED: "DELETED",
}

// EdgeAccountStitchedFields -
type EdgeAccountStitchedFields struct {
	Tracing EdgeTracing `json:"tracing"`
}

// EdgeAgentEndpointDetail - All the details necessary to configure an agent to connect to an endoint.
type EdgeAgentEndpointDetail struct {
	Host string `json:"host"`
	Port int    `json:"port"`
}

// EdgeCreateTraceObserverInput - Data required to create a trace observer.
type EdgeCreateTraceObserverInput struct {
	Name           string             `json:"name"`
	ProviderRegion EdgeProviderRegion `json:"providerRegion"`
}

// EdgeCreateTraceObserverResponse - Successfully created trace observers, or one or more error responses if there were issues.
type EdgeCreateTraceObserverResponse struct {
	Errors        []EdgeCreateTraceObserverResponseError `json:"errors"`
	TraceObserver EdgeTraceObserver                      `json:"traceObserver"`
}

// EdgeCreateTraceObserverResponseError - Description of errors that may occur while attempting to create a trace observer.
type EdgeCreateTraceObserverResponseError struct {
	Message string                                   `json:"message"`
	Type    EdgeCreateTraceObserverResponseErrorType `json:"type"`
}

// EdgeCreateTraceObserverResponses - Array of responses, one for each trace observer creation request.
type EdgeCreateTraceObserverResponses struct {
	Responses []EdgeCreateTraceObserverResponse `json:"responses"`
}

// EdgeDeleteTraceObserverInput - Data required to delete a trace observer.
type EdgeDeleteTraceObserverInput struct {
	ID int `json:"id"`
}

// EdgeDeleteTraceObserverResponse - Successfully deleted trace observers, or one or more error responses if there were issues.
type EdgeDeleteTraceObserverResponse struct {
	Errors        []EdgeDeleteTraceObserverResponseError `json:"errors"`
	TraceObserver EdgeTraceObserver                      `json:"traceObserver"`
}

// EdgeDeleteTraceObserverResponseError - Description of errors that may occur while attempting to delete a trace observer.
type EdgeDeleteTraceObserverResponseError struct {
	Message string                                   `json:"message"`
	Type    EdgeDeleteTraceObserverResponseErrorType `json:"type"`
}

// EdgeDeleteTraceObserverResponses - Array of responses, one for each trace observer deletion request.
type EdgeDeleteTraceObserverResponses struct {
	Responses []EdgeDeleteTraceObserverResponse `json:"responses"`
}

// EdgeEndpoint - An `Endpoint` describes access to an endpoint pointing to a trace observer. Currently, only one endpoint per trace observer is supported.
type EdgeEndpoint struct {
	Agent        EdgeAgentEndpointDetail `json:"agent"`
	EndpointType EdgeEndpointType        `json:"endpointType"`
	Https        EdgeHttpsEndpointDetail `json:"https"`
	Status       EdgeEndpointStatus      `json:"status"`
}

// EdgeHttpsEndpointDetail - All the details necessary to configure an integration to connect to the Infinite Tracing Trace API (HTTP 1.1) endpoint.
type EdgeHttpsEndpointDetail struct {
	Host string `json:"host"`
	Port int    `json:"port"`
	Url  string `json:"url"`
}

// EdgeTraceObserver - `TraceObserver` handles a group of tracing services for an account family.
type EdgeTraceObserver struct {
	Endpoints      []EdgeEndpoint          `json:"endpoints"`
	ID             int                     `json:"id"`
	Name           string                  `json:"name"`
	ProviderRegion EdgeProviderRegion      `json:"providerRegion"`
	Status         EdgeTraceObserverStatus `json:"status"`
}

// EdgeTraceObserverResponse - Array of trace observers, or a list of errors for why they couldn't be retrieved.
type EdgeTraceObserverResponse struct {
	Errors         []EdgeTraceObserverResponseError `json:"errors"`
	TraceObservers []EdgeTraceObserver              `json:"traceObservers"`
}

// EdgeTraceObserverResponseError - Description of errors that may occur while attempting to retrieve a trace observer.
type EdgeTraceObserverResponseError struct {
	Message string                             `json:"message"`
	Type    EdgeTraceObserverResponseErrorType `json:"type"`
}

// EdgeTracing - This field provides access to Tracing data.
type EdgeTracing struct {
	TraceObservers EdgeTraceObserverResponse `json:"traceObservers"`
}
